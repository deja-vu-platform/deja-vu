// Organize members into groups so that they can be handled in aggregate
cliche Group {
  // Collection of subgroups and/or members
  data Group {
    name: text,
    members: [Member],
    subgroups: [Group]
  }

  // Lowest-level named entity, contains nothing
  data Member {
    name: text
  }

  // Button allowing for the creation of a group/member
  widget NewGroup {
    group: Group,
    submit_ok: boolean
  }
  widget NewMember {
    member: Member,
    submit_ok: boolean
  }

  // Like NewGroup, but also adds member upon creation
  widget NewGroupWithInitialMember uses NewGroup {
    group: Group,
    member: Member,
    submit_ok: boolean
  }

  // Shows the name of a group
  widget ShowNameOfGroup {
    group: Group
  }

  // Shows the name of a member
  widget ShowNameOfMember {
    named: Member
  }

  // Shows all groups in the database
  widget ShowGroups uses ShowNameOfGroup {}

  // Shows all members in the database
  widget ShowMembers uses ShowNameOfMember {}

  // Shows all (direct or indirect) groups containing the given member
  widget ShowGroupsByMember uses ShowNameOfGroup {
    member: Member
  }

  // Shows all (direct or indirect) members in the given group
  widget ShowMembersByGroup uses ShowNameOfMember {
    group: Group
  }


  // Text box to edit group/member name
  // When submit_ok flips to true, the name is updated
  widget EditNameOfGroup {
    group: Group,
    submit_ok: boolean
  }
  widget EditNameOfMember {
    member: Member,
    submit_ok: boolean
  }

  // The user is presented with a text box to enter member names
  // Names entered appear on the screen
  // When submit_ok flips to true, all members are added
  widget EditMembersOfGroup {
    group: Group,
    submit_ok: boolean
  }
  // TODO: Edit Subgroups of Group

  // Allows an existing member to be added by name to the group
  widget AddMemberToGroup {
    group: Group
  }

  // Allows a member to be simultaneously created and added to a group
  widget AddNewMemberToGroup uses NewMember, EditNameOfMember {
    group: Group,
    member: Member,
    submit_ok: boolean
  }

  // Button allowing a member to join or leave a group
  widget JoinLeave {
    group: Group,
    member: Member
  }
