// Bookmark is an app for users to post updates with topics and follow other
// users or topics. Users get a feed with all the relevant updates given the
// topics and users they follow.
app Bookmark uses
  community/Follow as FollowUsers,
  community/Follow as FollowTopics, 
  access/Auth, messaging/Feed,
  organization/Label,
  messaging/Post as MessagingPost,
  messaging/Comment {

  /**
   *  Data definitions
   */
  data User {
    username: Text =
      FollowUsers.Source.name + FollowUsers.Target.name +
      FollowTopics.Source.name + Auth.User.username +
      MessagingPost.User.username + Comment.Author.name +
      Feed.Subscriber.name + Feed.Publisher.name,
    posts: Post = Feed.Publisher.messages + MessagingPost.User.posts,
    follows: User = FollowUsers.Source.follows + Feed.Subscriber.subscriptions |
      FollowTopics.Source.follows + Feed.Subscriber.subscriptions
  } = // users can follow other users
      FollowUsers.Source + FollowUsers.Target +
      // users can follow topics
      FollowTopics.Source +
      MessagingPost.User + Comment.Author +
      Feed.Subscriber + Feed.Publisher + Auth.User

  u1: User = {username: "benbitdiddle", posts: [p1]}
  u2: User = {username: "alyssaphacker", posts: [p2]}
  
  data Post {
    content: Text = MessagingPost.Post.content + Feed.Message.content,
    topics: Topic = Label.Item.labels,
    author: User = MessagingPost.Post.author
  } = Label.Item + MessagingPost.Post + Feed.Message + Comment.Target

  p1: Post = {content: "hello, I'm Ben", author: u1, topics: [t1]}
  p2: Post = {content: "hello, I'm Alyssa", author: u2, topics: [t1]}
  
  data Topic {
    name: Text = Label.Label.name + Feed.Publisher.name +
        FollowTopics.Target.name,
    posts: Post = Feed.Publisher.messages + Label.Label.items
  } = Label.Label + FollowTopics.Target + Feed.Publisher

  t1: Topic = {name: "hello", posts: [p1, p2]}

  /**
   * Widgets
   */
  // The landing page gives the user the option to sign in or register
  main widget Landing {
    user_ok_redirect_route: Text =
      Auth.RegisterWithRedirect.register_ok_redirect_route +
      Auth.SignInWithRedirect.signin_ok_redirect_route
  }

  l: Landing = {user_ok_redirect_route: "/app/home"}


  widget App {
    signout_ok_redirect_route: Text =
      Auth.SignOutWithRedirect.signout_ok_redirect_route
  }

  a: App = {signout_ok_redirect_route: "/landing"}

  widget Home {
    user: User = Auth.LoggedIn.user + CreatePost.author +
      Feed.ShowFeed.sub
  }

  // Shows the post, with its author, attached labels and comments. Also has
  // a field that lets the logged in user comment on the post
  widget ShowFeedPost {
    feed_user: User = Comment.CommentsWithComment.author,
    post: Post = Label.ShowLabels.item + MessagingPost.ShowAuthor.post +
      Comment.CommentsWithComment.target
  } replaces Feed.ShowFeedItem in Feed.ShowFeed {
    message = ShowFeedPost.post,
    sub = ShowFeedPost.feed_user
  }

  widget CreatePost {
    author: User = MessagingPost.NewPostButton.author,
    post: Post = MessagingPost.NewPostContent.post + Label.AttachLabels.item +
      MessagingPost.NewPostButton.post,
    submit_ok: Boolean = MessagingPost.NewPostContent.submit_ok +
      Label.AttachLabels.submit_ok + MessagingPost.NewPostButton.submit_ok
  }

  // Displays the list of topics and lets the logged in user follow or unfollow
  // them
  widget Topics {
    user: User = Auth.LoggedIn.user + FollowTopics.EditFollow.source
  }

  // Displays the list of users and lets the logged in user follow or unfollow
  // them
  widget Users {
    user: User = Auth.LoggedIn.user + FollowUsers.EditFollow.source
  }

  landing_route: Route = {path: "landing", widget: Landing}
  app_route: Route = {
    path: "app", widget: App,
    children: [
      {path: "home", widget: Home},
      {path: "users", widget: Users},
      {path: "topics", widget: Topics}
    ]
  }
}
