App <: Cliche {
  construct := "app"

  Paragraph
    += IncludeDecl -- include
    | FieldDecl -- field

  IncludeDecl = "include" clicheName Params? AsDecl*
  AsDecl = "as" name
  clicheName = alnum* "/" name

  Params = "[" Param ("," Param)* "]"
  Param
    = Type "for" name -- data
    | name "replacing" name "in" name -- replaces

  WidgetDecl := "main"? "widget" name "{" FieldBody? "}"
  FieldDecl := name ":" Type ("=" Expr)?

  Expr
    = UnExpr -- un
    | BinExpr -- bin
    | Literal -- literal
    | (~"\"" name) -- ref

  BinExpr
    = Expr "+" Expr -- plus
    | Expr "-" Expr -- minus
    | Expr "and" Expr -- and
    | Expr "or" Expr -- or
    | Expr "is" Expr -- is
  UnExpr
    = "not" Expr -- not

  Literal 
    = number -- number
    | "\"" (~"\"" any)* "\"" -- text
    | "true" -- true
    | "false"  -- false
    | "{" ListOf<PropAssignment, ","> "}" -- obj
    | "[" ListOf<Expr, ","> "]" -- array
  PropAssignment = name ":" Expr
  number = "-"? digit+
}
