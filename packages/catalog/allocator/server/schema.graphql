# When a new allocation is created, resources are distributed among
# consumers in a round-robin fashion.

type Allocation {
  id: ID!
  resourceIds: [ID!],
  consumerIds: [ID!]
}

type Query {
  allocation(id: ID!): Allocation
  consumerOfResource(resourceId: ID!, allocationId: ID!): ID
}

type Mutation {
  editConsumerOfResource(
      resourceId: ID!, allocationId: ID!, newConsumerId: ID!): Boolean
  # Creates a new allocation of the given resources and all existing consumers
  createAllocation(id: ID, resourceIds: [ID!], consumerIds: [ID!]): Allocation
  # Removes the given resource from the allocation
  deleteResource(resourceId: ID!, allocationId: ID!): Boolean
}
