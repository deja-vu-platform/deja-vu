type Ranking {
  id: ID!
  sourceId: ID
  targets: [TargetRank!]
}

type TargetRank {
  id: ID!
  rank: Float!
}

input TargetRankInput {
  id: ID!
  rank: Float!
}

input CreateRankingInput {
  id: ID
  sourceId: ID
  targets: [TargetRankInput!]
}

input RankingsInput {
  id: ID
  sourceId: ID
  targetId: ID
}

type Query {
  ranking(id: ID!, sourceId: ID): Ranking!
  rankings(input: RankingsInput!): [Ranking!]
  fractionalRanking(targetIds: [ID!]): [TargetRank!]
}

type Mutation {
  createRanking(input: CreateRankingInput!): Ranking!
}
