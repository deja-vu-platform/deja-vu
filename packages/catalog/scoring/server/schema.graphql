type Score {
  id: ID!
  value: Float
  targetId: ID
}

type Target {
  id: ID!
  scores: [Score!]
  total: Float
}

input CreateScoreInput {
  id: ID
  value: Float
  targetId: ID
}

input ScoresByTargetIdInput {
  id: ID
  showScores: Boolean
  showTotal: Boolean
}

type Query {
  score(id: ID!): Score
  scoresByTargetId(input: ScoresByTargetIdInput!): Target
}

type Mutation {
  createScore(input: CreateScoreInput!): Score
}
