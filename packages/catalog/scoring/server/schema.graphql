type Score {
  id: ID!
  value: Float!
  sourceId: ID!
  targetId: ID!
}

type Target {
  id: ID!
  scores: [Score!]
  total: Float
}

input CreateScoreInput {
  id: ID
  value: Float!
  sourceId: ID!
  targetId: ID!
}

input ShowScoreInput {
  id: ID
  sourceId: ID
  targetId: ID
}

input TargetsByScoreInput {
  asc: Boolean
  targetIds: [ID]
}

type Query {
  score(input: ShowScoreInput!): Score
  target(id: ID!): Target
  targetsByScore(input: TargetsByScoreInput): [Target!]
}

type Mutation {
  createScore(input: CreateScoreInput!): Score
}
