type Score {
  id: ID!
  value: Float
  sourceId: ID
  targetId: ID
}

type Target {
  id: ID!
  scores: [Score!]
  total: Float
}

input CreateScoreInput {
  id: ID
  value: Float
  sourceId: ID
  targetId: ID
}

type Query {
  score(id: ID!): Score
  target(id: ID!): Target
  targetsByScore(asc: Boolean): [Target!]
}

type Mutation {
  createScore(input: CreateScoreInput!): Score
}
