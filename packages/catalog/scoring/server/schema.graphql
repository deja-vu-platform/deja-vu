type Score {
  id: ID!
  value: Float
}

type Target {
  id: ID!
  scores: [Score!]
  total: Float
}

input CreateScoreInput {
  id: ID
  value: Float
}

input CreateTargetInput {
  id: ID
  initialScore: CreateScoreInput
}

input UpdateTargetInput {
  id: ID
  addScore: CreateScoreInput!
}

type Query {
  score(id: ID!): Score
  target(id: ID!): Target
}

type Mutation {
  createScore(input: CreateScoreInput!): Score
  createTarget(input: CreateTargetInput!): Target 
  updateTarget(input: UpdateTargetInput!): Boolean
}
