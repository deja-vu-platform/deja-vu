type Resource {
  id: ID!,
  ownerId: ID!,
  viewerIds: [ID!]
}

input ResourcesInput {
  viewableBy: ID!
}

input CreateResourceInput {
  id: ID,
  ownerId: ID!,
  viewerIds: [ID!]
}

type Query {
  resource(id: ID!): Resource
  owner(resourceId: ID!): ID
  resources(input: ResourcesInput!): [Resource!]
  isOwner(principalId: ID!, resourceId: ID!): Boolean
  isViewer(principalId: ID!, resourceId: ID!): Boolean
  canView(principalId: ID!, resourceId: ID!): Boolean
  canEdit(principalId: ID!, resourceId: ID!): Boolean
}

type Mutation {
  createResource(input: CreateResourceInput!): Resource
  addViewerToResource(id: ID!, viewerId: ID!): Boolean
  deleteResource(id: ID!): Boolean
}
