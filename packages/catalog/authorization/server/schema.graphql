type Principal {
  id: ID!
}

type Resource {
  id: ID!,
  ownerId: ID!,
  viewerIds: [ID!]
}

type Query {
  resource(id: ID!): Resource
  principal(id: ID!): Principal
  resources: [Resource!]
  principals: [Principal!]
  isOwner(principalId: ID!, resourceId: ID!): Boolean
  isViewer(principalId: ID!, resourceId: ID!): Boolean
}

type Mutation {
  createPrincipal(id:ID!): Principal
  createResource(id:ID!, ownerId: ID!, viewerIds: [ID!]): Resource
  addViewerToResource(id: ID!, viewerId: ID!): Boolean
  deleteResource(id: ID!): String
}
